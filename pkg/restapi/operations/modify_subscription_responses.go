// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "gerrit.o-ran-sc.org/r/ric-plt/appmgr/pkg/models"
)

// ModifySubscriptionOKCode is the HTTP code returned for type ModifySubscriptionOK
const ModifySubscriptionOKCode int = 200

/*ModifySubscriptionOK Subscription modification successful

swagger:response modifySubscriptionOK
*/
type ModifySubscriptionOK struct {

	/*
	  In: Body
	*/
	Payload *models.SubscriptionResponse `json:"body,omitempty"`
}

// NewModifySubscriptionOK creates ModifySubscriptionOK with default headers values
func NewModifySubscriptionOK() *ModifySubscriptionOK {

	return &ModifySubscriptionOK{}
}

// WithPayload adds the payload to the modify subscription o k response
func (o *ModifySubscriptionOK) WithPayload(payload *models.SubscriptionResponse) *ModifySubscriptionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the modify subscription o k response
func (o *ModifySubscriptionOK) SetPayload(payload *models.SubscriptionResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ModifySubscriptionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ModifySubscriptionBadRequestCode is the HTTP code returned for type ModifySubscriptionBadRequest
const ModifySubscriptionBadRequestCode int = 400

/*ModifySubscriptionBadRequest Invalid input

swagger:response modifySubscriptionBadRequest
*/
type ModifySubscriptionBadRequest struct {
}

// NewModifySubscriptionBadRequest creates ModifySubscriptionBadRequest with default headers values
func NewModifySubscriptionBadRequest() *ModifySubscriptionBadRequest {

	return &ModifySubscriptionBadRequest{}
}

// WriteResponse to the client
func (o *ModifySubscriptionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
