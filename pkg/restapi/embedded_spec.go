// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a draft API for RIC appmgr",
    "title": "RIC appmgr",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.3.3"
  },
  "host": "hostname",
  "basePath": "/ric/v1",
  "paths": {
    "/config": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Returns the configuration of all xapps",
        "operationId": "getAllXappConfig",
        "responses": {
          "200": {
            "description": "successful query of xApp config",
            "schema": {
              "$ref": "#/definitions/AllXappConfig"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Modify xApp config",
        "operationId": "ModifyXappConfig",
        "parameters": [
          {
            "description": "xApp config",
            "name": "XAppConfig",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/XAppConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "xApp config successfully modified",
            "schema": {
              "$ref": "#/definitions/ConfigValidationErrors"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation of configuration failed"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/config/{element}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Returns the given element of the configuration",
        "operationId": "GetConfigElement",
        "parameters": [
          {
            "type": "string",
            "description": "Name of configuration element",
            "name": "element",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful query of config elements",
            "schema": {
              "$ref": "#/definitions/AllXappConfig"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/deregister": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "xapp",
          "registration"
        ],
        "summary": "Deregister an existing xApp",
        "operationId": "deregisterXapp",
        "parameters": [
          {
            "description": "Xapp to be unregistered",
            "name": "deregisterRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deregisterRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deregistration of xApp"
          },
          "400": {
            "description": "Invalid xApp name supplied"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/health/alive": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health check of xApp Manager - Liveness probe",
        "operationId": "getHealthAlive",
        "responses": {
          "200": {
            "description": "Status of xApp Manager is ok"
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Readiness check of xApp Manager - Readiness probe",
        "operationId": "getHealthReady",
        "responses": {
          "200": {
            "description": "xApp Manager is ready for service"
          },
          "503": {
            "description": "xApp Manager is not ready for service"
          }
        }
      }
    },
    "/register": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp",
          "registration"
        ],
        "summary": "Register a new xApp",
        "operationId": "registerXapp",
        "parameters": [
          {
            "description": "New xApp registration",
            "name": "registerRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registerRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Registration successful"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp",
          "subscriptions"
        ],
        "summary": "Returns all subscriptions",
        "operationId": "getSubscriptions",
        "responses": {
          "200": {
            "description": "successful query of subscriptions",
            "schema": {
              "$ref": "#/definitions/allSubscriptions"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp",
          "subscriptions"
        ],
        "summary": "Subscribe event",
        "operationId": "addSubscription",
        "parameters": [
          {
            "description": "New subscription",
            "name": "subscriptionRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/subscriptionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Subscription successfully created",
            "schema": {
              "$ref": "#/definitions/subscriptionResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp",
          "subscriptions"
        ],
        "summary": "Returns the information of subscription",
        "operationId": "getSubscriptionById",
        "parameters": [
          {
            "type": "string",
            "description": "ID of subscription",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/subscription"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Subscription not found"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp",
          "subscriptions"
        ],
        "summary": "Modify event subscription",
        "operationId": "modifySubscription",
        "parameters": [
          {
            "type": "string",
            "description": "ID of subscription",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "description": "Modified subscription",
            "name": "subscriptionRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/subscriptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription modification successful",
            "schema": {
              "$ref": "#/definitions/subscriptionResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "xapp",
          "subscriptions"
        ],
        "summary": "Unsubscribe event",
        "operationId": "deleteSubscription",
        "parameters": [
          {
            "type": "string",
            "description": "ID of subscription",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deletion of subscription"
          },
          "400": {
            "description": "Invalid subscription supplied"
          }
        }
      }
    },
    "/xapps": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Returns the status of all xapps",
        "operationId": "getAllXapps",
        "responses": {
          "200": {
            "description": "successful query of xApps",
            "schema": {
              "$ref": "#/definitions/AllDeployedXapps"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Deploy a xapp",
        "operationId": "deployXapp",
        "parameters": [
          {
            "description": "xApp deployment info",
            "name": "XappDescriptor",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/XappDescriptor"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "xApp successfully created",
            "schema": {
              "$ref": "#/definitions/Xapp"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/xapps/list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Returns the list of all deployable xapps",
        "operationId": "listAllXapps",
        "responses": {
          "200": {
            "description": "successful list of deployable xApps",
            "schema": {
              "$ref": "#/definitions/AllDeployableXapps"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/xapps/{xAppName}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Returns the status of a given xapp",
        "operationId": "getXappByName",
        "parameters": [
          {
            "type": "string",
            "description": "Name of xApp",
            "name": "xAppName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Xapp"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Xapp not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "delete": {
        "tags": [
          "xapp"
        ],
        "summary": "Undeploy an existing xapp",
        "operationId": "undeployXapp",
        "parameters": [
          {
            "type": "string",
            "description": "Xapp to be undeployed",
            "name": "xAppName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deletion of xApp"
          },
          "400": {
            "description": "Invalid xApp name supplied"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/xapps/{xAppName}/instances/{xAppInstanceName}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Returns the status of a given xapp",
        "operationId": "getXappInstanceByName",
        "parameters": [
          {
            "type": "string",
            "description": "Name of xApp",
            "name": "xAppName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Name of xApp instance to get information",
            "name": "xAppInstanceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/XappInstance"
            }
          },
          "400": {
            "description": "Invalid name supplied"
          },
          "404": {
            "description": "Xapp not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    }
  },
  "definitions": {
    "AllDeployableXapps": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "AllDeployedXapps": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Xapp"
      }
    },
    "AllXappConfig": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/XAppConfig"
      }
    },
    "ConfigMetadata": {
      "type": "object",
      "required": [
        "xappName",
        "namespace"
      ],
      "properties": {
        "namespace": {
          "description": "Name of the namespace",
          "type": "string"
        },
        "xappName": {
          "description": "Name of the xApp",
          "type": "string"
        }
      }
    },
    "ConfigValidationError": {
      "type": "object",
      "required": [
        "field",
        "error"
      ],
      "properties": {
        "error": {
          "description": "Description of validation error",
          "type": "string"
        },
        "field": {
          "description": "Name of the parameter",
          "type": "string"
        }
      }
    },
    "ConfigValidationErrors": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ConfigValidationError"
      }
    },
    "EventType": {
      "description": "Event which is subscribed",
      "type": "string",
      "enum": [
        "deployed",
        "undeployed",
        "created",
        "modified",
        "deleted",
        "restarted",
        "all"
      ]
    },
    "SubscriptionData": {
      "type": "object",
      "required": [
        "targetUrl",
        "eventType",
        "maxRetries",
        "retryTimer"
      ],
      "properties": {
        "eventType": {
          "$ref": "#/definitions/EventType"
        },
        "maxRetries": {
          "description": "Maximum number of retries",
          "type": "integer"
        },
        "retryTimer": {
          "description": "Time in seconds to wait before next retry",
          "type": "integer"
        },
        "targetUrl": {
          "type": "string",
          "example": "http://localhost:11111/apps/webhook/"
        }
      }
    },
    "XAppConfig": {
      "type": "object",
      "required": [
        "metadata",
        "config"
      ],
      "properties": {
        "config": {
          "description": "Configuration in JSON format",
          "type": "object"
        },
        "metadata": {
          "$ref": "#/definitions/ConfigMetadata"
        }
      }
    },
    "Xapp": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "instances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/XappInstance"
          }
        },
        "name": {
          "type": "string"
        },
        "status": {
          "description": "xapp status in the RIC",
          "type": "string",
          "enum": [
            "unknown",
            "deployed",
            "deleted",
            "superseded",
            "failed",
            "deleting"
          ]
        },
        "version": {
          "type": "string"
        }
      }
    },
    "XappDescriptor": {
      "type": "object",
      "required": [
        "xappName"
      ],
      "properties": {
        "helmVersion": {
          "description": "The exact xapp helm chart version to install",
          "type": "string"
        },
        "namespace": {
          "description": "Name of the namespace to which xApp is deployed. Overrides the value given in Helm chart value file.",
          "type": "string"
        },
        "overrideFile": {
          "description": "JSON string of override file for 'helm install' command",
          "type": "object"
        },
        "releaseName": {
          "description": "Name of the xapp to be visible in Kubernetes",
          "type": "string"
        },
        "xappName": {
          "description": "Name of the xApp in helm chart",
          "type": "string"
        }
      }
    },
    "XappDescriptorList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/XappDescriptor"
      }
    },
    "XappInstance": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "ip": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "port": {
          "type": "integer"
        },
        "rxMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "xapp instance status",
          "type": "string",
          "enum": [
            "pending",
            "running",
            "succeeded",
            "failed",
            "unknown",
            "completed",
            "crashLoopBackOff"
          ]
        },
        "txMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "allSubscriptions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/subscription"
      }
    },
    "deregisterRequest": {
      "type": "object",
      "required": [
        "appName",
        "appInstanceName"
      ],
      "properties": {
        "appInstanceName": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        }
      }
    },
    "registerRequest": {
      "type": "object",
      "required": [
        "appName",
        "appInstanceName",
        "httpEndpoint",
        "rmrEndpoint"
      ],
      "properties": {
        "appInstanceName": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "appVersion": {
          "type": "string"
        },
        "config": {
          "description": "Configuration in JSON string format",
          "type": "string"
        },
        "configPath": {
          "type": "string"
        },
        "httpEndpoint": {
          "type": "string"
        },
        "rmrEndpoint": {
          "type": "string"
        }
      }
    },
    "subscription": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/SubscriptionData"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "subscriptionNotification": {
      "type": "object",
      "properties": {
        "eventType": {
          "$ref": "#/definitions/EventType"
        },
        "id": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "xApps": {
          "$ref": "#/definitions/AllDeployedXapps"
        }
      }
    },
    "subscriptionRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SubscriptionData"
        }
      }
    },
    "subscriptionResponse": {
      "type": "object",
      "properties": {
        "eventType": {
          "$ref": "#/definitions/EventType"
        },
        "id": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a draft API for RIC appmgr",
    "title": "RIC appmgr",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.3.3"
  },
  "host": "hostname",
  "basePath": "/ric/v1",
  "paths": {
    "/config": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Returns the configuration of all xapps",
        "operationId": "getAllXappConfig",
        "responses": {
          "200": {
            "description": "successful query of xApp config",
            "schema": {
              "$ref": "#/definitions/AllXappConfig"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Modify xApp config",
        "operationId": "ModifyXappConfig",
        "parameters": [
          {
            "description": "xApp config",
            "name": "XAppConfig",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/XAppConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "xApp config successfully modified",
            "schema": {
              "$ref": "#/definitions/ConfigValidationErrors"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation of configuration failed"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/config/{element}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Returns the given element of the configuration",
        "operationId": "GetConfigElement",
        "parameters": [
          {
            "type": "string",
            "description": "Name of configuration element",
            "name": "element",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful query of config elements",
            "schema": {
              "$ref": "#/definitions/AllXappConfig"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/deregister": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "xapp",
          "registration"
        ],
        "summary": "Deregister an existing xApp",
        "operationId": "deregisterXapp",
        "parameters": [
          {
            "description": "Xapp to be unregistered",
            "name": "deregisterRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/deregisterRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deregistration of xApp"
          },
          "400": {
            "description": "Invalid xApp name supplied"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/health/alive": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health check of xApp Manager - Liveness probe",
        "operationId": "getHealthAlive",
        "responses": {
          "200": {
            "description": "Status of xApp Manager is ok"
          }
        }
      }
    },
    "/health/ready": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Readiness check of xApp Manager - Readiness probe",
        "operationId": "getHealthReady",
        "responses": {
          "200": {
            "description": "xApp Manager is ready for service"
          },
          "503": {
            "description": "xApp Manager is not ready for service"
          }
        }
      }
    },
    "/register": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp",
          "registration"
        ],
        "summary": "Register a new xApp",
        "operationId": "registerXapp",
        "parameters": [
          {
            "description": "New xApp registration",
            "name": "registerRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registerRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Registration successful"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp",
          "subscriptions"
        ],
        "summary": "Returns all subscriptions",
        "operationId": "getSubscriptions",
        "responses": {
          "200": {
            "description": "successful query of subscriptions",
            "schema": {
              "$ref": "#/definitions/allSubscriptions"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp",
          "subscriptions"
        ],
        "summary": "Subscribe event",
        "operationId": "addSubscription",
        "parameters": [
          {
            "description": "New subscription",
            "name": "subscriptionRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/subscriptionRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Subscription successfully created",
            "schema": {
              "$ref": "#/definitions/subscriptionResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp",
          "subscriptions"
        ],
        "summary": "Returns the information of subscription",
        "operationId": "getSubscriptionById",
        "parameters": [
          {
            "type": "string",
            "description": "ID of subscription",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/subscription"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Subscription not found"
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp",
          "subscriptions"
        ],
        "summary": "Modify event subscription",
        "operationId": "modifySubscription",
        "parameters": [
          {
            "type": "string",
            "description": "ID of subscription",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "description": "Modified subscription",
            "name": "subscriptionRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/subscriptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription modification successful",
            "schema": {
              "$ref": "#/definitions/subscriptionResponse"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "xapp",
          "subscriptions"
        ],
        "summary": "Unsubscribe event",
        "operationId": "deleteSubscription",
        "parameters": [
          {
            "type": "string",
            "description": "ID of subscription",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deletion of subscription"
          },
          "400": {
            "description": "Invalid subscription supplied"
          }
        }
      }
    },
    "/xapps": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Returns the status of all xapps",
        "operationId": "getAllXapps",
        "responses": {
          "200": {
            "description": "successful query of xApps",
            "schema": {
              "$ref": "#/definitions/AllDeployedXapps"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Deploy a xapp",
        "operationId": "deployXapp",
        "parameters": [
          {
            "description": "xApp deployment info",
            "name": "XappDescriptor",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/XappDescriptor"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "xApp successfully created",
            "schema": {
              "$ref": "#/definitions/Xapp"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/xapps/list": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Returns the list of all deployable xapps",
        "operationId": "listAllXapps",
        "responses": {
          "200": {
            "description": "successful list of deployable xApps",
            "schema": {
              "$ref": "#/definitions/AllDeployableXapps"
            }
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/xapps/{xAppName}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Returns the status of a given xapp",
        "operationId": "getXappByName",
        "parameters": [
          {
            "type": "string",
            "description": "Name of xApp",
            "name": "xAppName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Xapp"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Xapp not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      },
      "delete": {
        "tags": [
          "xapp"
        ],
        "summary": "Undeploy an existing xapp",
        "operationId": "undeployXapp",
        "parameters": [
          {
            "type": "string",
            "description": "Xapp to be undeployed",
            "name": "xAppName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deletion of xApp"
          },
          "400": {
            "description": "Invalid xApp name supplied"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/xapps/{xAppName}/instances/{xAppInstanceName}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "xapp"
        ],
        "summary": "Returns the status of a given xapp",
        "operationId": "getXappInstanceByName",
        "parameters": [
          {
            "type": "string",
            "description": "Name of xApp",
            "name": "xAppName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Name of xApp instance to get information",
            "name": "xAppInstanceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/XappInstance"
            }
          },
          "400": {
            "description": "Invalid name supplied"
          },
          "404": {
            "description": "Xapp not found"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    }
  },
  "definitions": {
    "AllDeployableXapps": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "AllDeployedXapps": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Xapp"
      }
    },
    "AllXappConfig": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/XAppConfig"
      }
    },
    "ConfigMetadata": {
      "type": "object",
      "required": [
        "xappName",
        "namespace"
      ],
      "properties": {
        "namespace": {
          "description": "Name of the namespace",
          "type": "string"
        },
        "xappName": {
          "description": "Name of the xApp",
          "type": "string"
        }
      }
    },
    "ConfigValidationError": {
      "type": "object",
      "required": [
        "field",
        "error"
      ],
      "properties": {
        "error": {
          "description": "Description of validation error",
          "type": "string"
        },
        "field": {
          "description": "Name of the parameter",
          "type": "string"
        }
      }
    },
    "ConfigValidationErrors": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ConfigValidationError"
      }
    },
    "EventType": {
      "description": "Event which is subscribed",
      "type": "string",
      "enum": [
        "deployed",
        "undeployed",
        "created",
        "modified",
        "deleted",
        "restarted",
        "all"
      ]
    },
    "SubscriptionData": {
      "type": "object",
      "required": [
        "targetUrl",
        "eventType",
        "maxRetries",
        "retryTimer"
      ],
      "properties": {
        "eventType": {
          "$ref": "#/definitions/EventType"
        },
        "maxRetries": {
          "description": "Maximum number of retries",
          "type": "integer"
        },
        "retryTimer": {
          "description": "Time in seconds to wait before next retry",
          "type": "integer"
        },
        "targetUrl": {
          "type": "string",
          "example": "http://localhost:11111/apps/webhook/"
        }
      }
    },
    "XAppConfig": {
      "type": "object",
      "required": [
        "metadata",
        "config"
      ],
      "properties": {
        "config": {
          "description": "Configuration in JSON format",
          "type": "object"
        },
        "metadata": {
          "$ref": "#/definitions/ConfigMetadata"
        }
      }
    },
    "Xapp": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "instances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/XappInstance"
          }
        },
        "name": {
          "type": "string"
        },
        "status": {
          "description": "xapp status in the RIC",
          "type": "string",
          "enum": [
            "unknown",
            "deployed",
            "deleted",
            "superseded",
            "failed",
            "deleting"
          ]
        },
        "version": {
          "type": "string"
        }
      }
    },
    "XappDescriptor": {
      "type": "object",
      "required": [
        "xappName"
      ],
      "properties": {
        "helmVersion": {
          "description": "The exact xapp helm chart version to install",
          "type": "string"
        },
        "namespace": {
          "description": "Name of the namespace to which xApp is deployed. Overrides the value given in Helm chart value file.",
          "type": "string"
        },
        "overrideFile": {
          "description": "JSON string of override file for 'helm install' command",
          "type": "object"
        },
        "releaseName": {
          "description": "Name of the xapp to be visible in Kubernetes",
          "type": "string"
        },
        "xappName": {
          "description": "Name of the xApp in helm chart",
          "type": "string"
        }
      }
    },
    "XappDescriptorList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/XappDescriptor"
      }
    },
    "XappInstance": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "ip": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "port": {
          "type": "integer"
        },
        "rxMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "xapp instance status",
          "type": "string",
          "enum": [
            "pending",
            "running",
            "succeeded",
            "failed",
            "unknown",
            "completed",
            "crashLoopBackOff"
          ]
        },
        "txMessages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "allSubscriptions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/subscription"
      }
    },
    "deregisterRequest": {
      "type": "object",
      "required": [
        "appName",
        "appInstanceName"
      ],
      "properties": {
        "appInstanceName": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        }
      }
    },
    "registerRequest": {
      "type": "object",
      "required": [
        "appName",
        "appInstanceName",
        "httpEndpoint",
        "rmrEndpoint"
      ],
      "properties": {
        "appInstanceName": {
          "type": "string"
        },
        "appName": {
          "type": "string"
        },
        "appVersion": {
          "type": "string"
        },
        "config": {
          "description": "Configuration in JSON string format",
          "type": "string"
        },
        "configPath": {
          "type": "string"
        },
        "httpEndpoint": {
          "type": "string"
        },
        "rmrEndpoint": {
          "type": "string"
        }
      }
    },
    "subscription": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/SubscriptionData"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "subscriptionNotification": {
      "type": "object",
      "properties": {
        "eventType": {
          "$ref": "#/definitions/EventType"
        },
        "id": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "xApps": {
          "$ref": "#/definitions/AllDeployedXapps"
        }
      }
    },
    "subscriptionRequest": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/SubscriptionData"
        }
      }
    },
    "subscriptionResponse": {
      "type": "object",
      "properties": {
        "eventType": {
          "$ref": "#/definitions/EventType"
        },
        "id": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        }
      }
    }
  }
}`))
}
