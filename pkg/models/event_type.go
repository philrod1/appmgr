// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// EventType Event which is subscribed
// swagger:model EventType
type EventType string

const (

	// EventTypeDeployed captures enum value "deployed"
	EventTypeDeployed EventType = "deployed"

	// EventTypeUndeployed captures enum value "undeployed"
	EventTypeUndeployed EventType = "undeployed"

	// EventTypeCreated captures enum value "created"
	EventTypeCreated EventType = "created"

	// EventTypeModified captures enum value "modified"
	EventTypeModified EventType = "modified"

	// EventTypeDeleted captures enum value "deleted"
	EventTypeDeleted EventType = "deleted"

	// EventTypeRestarted captures enum value "restarted"
	EventTypeRestarted EventType = "restarted"

	// EventTypeAll captures enum value "all"
	EventTypeAll EventType = "all"
)

// for schema
var eventTypeEnum []interface{}

func init() {
	var res []EventType
	if err := json.Unmarshal([]byte(`["deployed","undeployed","created","modified","deleted","restarted","all"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		eventTypeEnum = append(eventTypeEnum, v)
	}
}

func (m EventType) validateEventTypeEnum(path, location string, value EventType) error {
	if err := validate.Enum(path, location, value, eventTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this event type
func (m EventType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateEventTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
