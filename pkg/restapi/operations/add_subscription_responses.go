// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "gerrit.o-ran-sc.org/r/ric-plt/appmgr/pkg/models"
)

// AddSubscriptionCreatedCode is the HTTP code returned for type AddSubscriptionCreated
const AddSubscriptionCreatedCode int = 201

/*AddSubscriptionCreated Subscription successfully created

swagger:response addSubscriptionCreated
*/
type AddSubscriptionCreated struct {

	/*
	  In: Body
	*/
	Payload *models.SubscriptionResponse `json:"body,omitempty"`
}

// NewAddSubscriptionCreated creates AddSubscriptionCreated with default headers values
func NewAddSubscriptionCreated() *AddSubscriptionCreated {

	return &AddSubscriptionCreated{}
}

// WithPayload adds the payload to the add subscription created response
func (o *AddSubscriptionCreated) WithPayload(payload *models.SubscriptionResponse) *AddSubscriptionCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add subscription created response
func (o *AddSubscriptionCreated) SetPayload(payload *models.SubscriptionResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddSubscriptionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddSubscriptionBadRequestCode is the HTTP code returned for type AddSubscriptionBadRequest
const AddSubscriptionBadRequestCode int = 400

/*AddSubscriptionBadRequest Invalid input

swagger:response addSubscriptionBadRequest
*/
type AddSubscriptionBadRequest struct {
}

// NewAddSubscriptionBadRequest creates AddSubscriptionBadRequest with default headers values
func NewAddSubscriptionBadRequest() *AddSubscriptionBadRequest {

	return &AddSubscriptionBadRequest{}
}

// WriteResponse to the client
func (o *AddSubscriptionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
